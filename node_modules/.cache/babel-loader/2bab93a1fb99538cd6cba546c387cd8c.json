{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\csi\\\\simple-react-signup-form-with-validation-main\\\\src\\\\Components\\\\form-component.js\";\nimport React from \"react\";\nconst emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n\nclass FormComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      emailAddress: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      firstNameError: \"\",\n      emailAddressError: \"\",\n      passwordError: \"\",\n      passwordConfirmationError: \"\",\n      isFormSubmitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateFirstName = this.validateFirstName.bind(this);\n    this.validateLastName = this.validateLastName.bind(this);\n    this.validateEmailAddress = this.validateEmailAddress.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.validatePasswordConfirmation = this.validatePasswordConfirmation.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    return;\n  }\n\n  handleBlur(event) {\n    const {\n      name\n    } = event.target;\n    this.validateField(name);\n    return;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let formFields = [\"firstName\", \"lastName\", \"emailAddress\", \"password\", \"passwordConfirmation\"];\n    let isValid = true;\n    formFields.forEach(field => {\n      isValid = this.validateField(field) && isValid;\n    });\n    if (isValid) this.setState({\n      isFormSubmitted: true\n    });else this.setState({\n      isFormSubmitted: false\n    });\n    return this.state.isFormSubmitted;\n  }\n\n  validateField(name) {\n    let isValid = false;\n    if (name === \"firstName\") isValid = this.validateFirstName();else if (name === \"lastName\") isValid = this.validateLastName();else if (name === \"emailAddress\") isValid = this.validateEmailAddress();else if (name === \"password\") isValid = this.validatePassword();else if (name === \"passwordConfirmation\") isValid = this.validatePasswordConfirmation();\n    return isValid;\n  }\n\n  validateFirstName() {\n    let firstNameError = \"\";\n    const value = this.state.firstName;\n    if (value.trim() === \"\") firstNameError = \"First Name is required\";\n    this.setState({\n      firstNameError\n    });\n    return firstNameError === \"\";\n  }\n\n  validateLastName() {\n    let lastNameError = \"\";\n    const value = this.state.lastName;\n    if (value.trim() === \"\") lastNameError = \"Last Name is required\";\n    this.setState({\n      lastNameError\n    });\n    return lastNameError === \"\";\n  }\n\n  validateEmailAddress() {\n    let emailAddressError = \"\";\n    const value = this.state.emailAddress;\n    if (value.trim === \"\") emailAddressError = \"Email Address is required\";else if (!emailValidator.test(value)) emailAddressError = \"Email is not valid\";\n    this.setState({\n      emailAddressError\n    });\n    return emailAddressError === \"\";\n  }\n\n  validatePassword() {\n    let passwordError = \"\";\n    const value = this.state.password;\n    if (value.trim === \"\") passwordError = \"Password is required\";else if (!passwordValidator.test(value)) passwordError = \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\n    this.setState({\n      passwordError\n    });\n    return passwordError === \"\";\n  }\n\n  validatePasswordConfirmation() {\n    let passwordConfirmationError = \"\";\n    if (this.state.password !== this.state.passwordConfirmation) passwordConfirmationError = \"Password does not match Confirmation\";\n    this.setState({\n      passwordConfirmationError\n    });\n    return passwordConfirmationError === \"\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, \"SignUp Form\"), this.state.isFormSubmitted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Thanks for signing up, find your details below:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"First Name: \", this.state.firstName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Last Name: \", this.state.lastName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Email Address: \", this.state.emailAddress)) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), this.state.firstNameError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, this.state.firstNameError), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }), this.state.lastNameError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, this.state.lastNameError), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email Address\",\n      name: \"emailAddress\",\n      value: this.state.emailAddress,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }), this.state.emailAddressError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, this.state.emailAddressError), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }), this.state.passwordError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"passwordConfirmation\",\n      value: this.state.passwordConfirmation,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }), this.state.passwordConfirmationError && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, this.state.passwordConfirmationError), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, \"Signup\"))));\n  }\n\n}\n\nexport default FormComponent;","map":{"version":3,"sources":["C:/Users/sumit/OneDrive/Desktop/csi/simple-react-signup-form-with-validation-main/src/Components/form-component.js"],"names":["React","emailValidator","passwordValidator","FormComponent","Component","constructor","state","firstName","lastName","emailAddress","password","passwordConfirmation","firstNameError","emailAddressError","passwordError","passwordConfirmationError","isFormSubmitted","handleChange","bind","handleBlur","handleSubmit","validateFirstName","validateLastName","validateEmailAddress","validatePassword","validatePasswordConfirmation","validateField","event","name","value","target","setState","preventDefault","formFields","isValid","forEach","field","trim","lastNameError","test","render","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n\nclass FormComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      emailAddress: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      firstNameError: \"\",\n      emailAddressError: \"\",\n      passwordError: \"\",\n      passwordConfirmationError: \"\",\n      isFormSubmitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateFirstName = this.validateFirstName.bind(this);\n    this.validateLastName = this.validateLastName.bind(this);\n    this.validateEmailAddress = this.validateEmailAddress.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.validatePasswordConfirmation = this.validatePasswordConfirmation.bind(\n      this\n    );\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n\n    return;\n  }\n\n  handleBlur(event) {\n    const { name } = event.target;\n\n    this.validateField(name);\n    return;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let formFields = [\n      \"firstName\",\n      \"lastName\",\n      \"emailAddress\",\n      \"password\",\n      \"passwordConfirmation\"\n    ];\n    let isValid = true;\n    formFields.forEach(field => {\n      isValid = this.validateField(field) && isValid;\n    });\n\n    if (isValid) this.setState({ isFormSubmitted: true });\n    else this.setState({ isFormSubmitted: false });\n\n    return this.state.isFormSubmitted;\n  }\n\n  validateField(name) {\n    let isValid = false;\n\n    if (name === \"firstName\") isValid = this.validateFirstName();\n    else if (name === \"lastName\") isValid = this.validateLastName();\n    else if (name === \"emailAddress\") isValid = this.validateEmailAddress();\n    else if (name === \"password\") isValid = this.validatePassword();\n    else if (name === \"passwordConfirmation\")\n      isValid = this.validatePasswordConfirmation();\n    return isValid;\n  }\n\n  validateFirstName() {\n    let firstNameError = \"\";\n    const value = this.state.firstName;\n    if (value.trim() === \"\") firstNameError = \"First Name is required\";\n\n    this.setState({\n      firstNameError\n    });\n    return firstNameError === \"\";\n  }\n\n  validateLastName() {\n    let lastNameError = \"\";\n    const value = this.state.lastName;\n    if (value.trim() === \"\") lastNameError = \"Last Name is required\";\n\n    this.setState({\n      lastNameError\n    });\n    return lastNameError === \"\";\n  }\n\n  validateEmailAddress() {\n    let emailAddressError = \"\";\n    const value = this.state.emailAddress;\n    if (value.trim === \"\") emailAddressError = \"Email Address is required\";\n    else if (!emailValidator.test(value))\n      emailAddressError = \"Email is not valid\";\n\n    this.setState({\n      emailAddressError\n    });\n    return emailAddressError === \"\";\n  }\n\n  validatePassword() {\n    let passwordError = \"\";\n    const value = this.state.password;\n    if (value.trim === \"\") passwordError = \"Password is required\";\n    else if (!passwordValidator.test(value))\n      passwordError =\n        \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\n\n    this.setState({\n      passwordError\n    });\n    return passwordError === \"\";\n  }\n\n  validatePasswordConfirmation() {\n    let passwordConfirmationError = \"\";\n    if (this.state.password !== this.state.passwordConfirmation)\n      passwordConfirmationError = \"Password does not match Confirmation\";\n\n    this.setState({\n      passwordConfirmationError\n    });\n    return passwordConfirmationError === \"\";\n  }\n\n  render() {\n    return (\n      <div className=\"main\" >\n        <h3>SignUp Form</h3>\n        {this.state.isFormSubmitted ? (\n          <div className=\"details\">\n            <h3>Thanks for signing up, find your details below:</h3>\n            <div>First Name: {this.state.firstName}</div>\n            <div>Last Name: {this.state.lastName}</div>\n            <div>Email Address: {this.state.emailAddress}</div>\n          </div>\n        ) : (\n          <div style={{textAlign:\"center\"}}>\n          <form onSubmit={this.handleSubmit} >\n            <input\n              type=\"text\"\n              placeholder=\"First Name\"\n              name=\"firstName\"\n              value={this.state.firstName}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.firstNameError && (\n              <div className=\"errorMsg\">{this.state.firstNameError}</div>\n            )}\n            <input\n              type=\"text\"\n              placeholder=\"Last Name\"\n              name=\"lastName\"\n              value={this.state.lastName}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.lastNameError && (\n              <div className=\"errorMsg\">{this.state.lastNameError}</div>\n            )}\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"emailAddress\"\n              value={this.state.emailAddress}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.emailAddressError && (\n              <div className=\"errorMsg\">{this.state.emailAddressError}</div>\n            )}\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.passwordError && (\n              <div className=\"errorMsg\">{this.state.passwordError}</div>\n            )}\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"passwordConfirmation\"\n              value={this.state.passwordConfirmation}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.passwordConfirmationError && (\n              <div className=\"errorMsg\">\n                {this.state.passwordConfirmationError}\n              </div>\n            )}\n            <button>Signup</button>\n          </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default FormComponent;\n"]},"metadata":{},"sourceType":"module"}